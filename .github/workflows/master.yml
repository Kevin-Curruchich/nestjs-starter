name: "CI/CD"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '18.17.0' ]
    name: "Setup"
    steps:
      - name: "⚙ Set up Node.js v${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: "✅ Checkout repository"
        uses: actions/checkout@v3

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '18.17.0' ]
    needs: setup
    name: "Build"
    steps:
      - name: "⚙ Set up Node.js v${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: "✅ Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "💾 Restore packages from cache"
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "🦉 GitGuardian scan"
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: "📦 Install packages"
        run: yarn install

      - name: "💅 Lint"
        run: yarn lint

      - name: "🔨 Build"
        run: yarn build

      - name: "👨‍💻 Run Test"
        run: yarn test
        env:
          NODE_ENV: 'test'
